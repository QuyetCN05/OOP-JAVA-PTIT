/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package ptitcode;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.*;

/**
 *
 * @author buihu
 */
class IntSet{
    TreeSet<Integer> set;
    
    public IntSet(int[] a){
        set= new TreeSet<>();
        for(int x: a){
            set.add(x);
        }
    }
    public IntSet(TreeSet<Integer> a){
        set=a;
    }
    public IntSet union(IntSet other){
        TreeSet<Integer> union=(TreeSet<Integer>) set.clone();
        union.addAll(other.set);
        return new IntSet(union);
       
    }
    public IntSet intersection(IntSet other){
        TreeSet<Integer> intersection=(TreeSet<Integer>) set.clone();
        intersection.retainAll(other.set);
        return new IntSet(intersection);
    }

    @Override
    public String toString() {
       List<String> arr= new ArrayList<>();
       for(int x: set){
           arr.add(Integer.toString(x));
       }
       return String.join(" ", arr);
    }
    
}
public class J04021 {
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(new File("DATA.in"));
        int n = sc.nextInt(), m = sc.nextInt(), a[] = new int[n], b[] = new int[m];
        for(int i = 0; i<n; i++) a[i] = sc.nextInt();
        for(int i = 0; i<m; i++) b[i] = sc.nextInt();
        IntSet s1 = new IntSet(a);
        IntSet s2 = new IntSet(b);
        IntSet s3 = s1.intersection(s2);
        System.out.println(s3);
    }
    public static void main9939046(String[] args) throws IOException {
        Scanner sc= new Scanner(new File("DATA.in"));
        int n=sc.nextInt(),m=sc.nextInt(), a[]= new int[n], b[]=new int[m];
        for(int i=0;i<n;i++) a[i]=sc.nextInt();
        for(int i=0;i<m;i++) b[i]=sc.nextInt();
        IntSet s1= new IntSet(a);
        IntSet s2= new IntSet(b);
        IntSet s3= s1.intersection(s2);
        System.out.println(s3);
       
        
    }
}

